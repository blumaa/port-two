<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   inkscape:version="0.92.5 (2060ec1f9f, 2020-04-08)"
   sodipodi:docname="pinkcloud.svg"
   height="89.77066"
   width="351.28622"
   version="1.1"
   id="圖層_1"
   x="0"
   y="0"
   viewBox="0 20 154.07292 39.373098"
   xml:space="preserve"><metadata
     id="metadata88"><rdf:RDF><cc:Work
         rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" /><dc:title /></cc:Work></rdf:RDF></metadata><defs
     id="defs86"><filter
       style="color-interpolation-filters:sRGB"
       inkscape:label="Drop Shadow"
       id="filter5602"><feFlood
         flood-opacity="0.498039"
         flood-color="rgb(0,0,0)"
         result="flood"
         id="feFlood5592" /><feComposite
         in="flood"
         in2="SourceGraphic"
         operator="in"
         result="composite1"
         id="feComposite5594" /><feGaussianBlur
         in="composite1"
         stdDeviation="3"
         result="blur"
         id="feGaussianBlur5596" /><feOffset
         dx="6"
         dy="6"
         result="offset"
         id="feOffset5598" /><feComposite
         in="SourceGraphic"
         in2="offset"
         operator="over"
         result="composite2"
         id="feComposite5600" /></filter><filter
       style="color-interpolation-filters:sRGB"
       inkscape:label="Drop Shadow"
       id="filter6199"><feFlood
         flood-opacity="0.498039"
         flood-color="rgb(0,0,0)"
         result="flood"
         id="feFlood6189" /><feComposite
         in="flood"
         in2="SourceGraphic"
         operator="in"
         result="composite1"
         id="feComposite6191" /><feGaussianBlur
         in="composite1"
         stdDeviation="3"
         result="blur"
         id="feGaussianBlur6193" /><feOffset
         dx="6"
         dy="6"
         result="offset"
         id="feOffset6195" /><feComposite
         in="SourceGraphic"
         in2="offset"
         operator="over"
         result="composite2"
         id="feComposite6197" /></filter></defs><sodipodi:namedview
     inkscape:current-layer="圖層_1"
     inkscape:window-maximized="1"
     inkscape:window-y="-8"
     inkscape:window-x="-8"
     inkscape:cy="75.349313"
     inkscape:cx="117.3856"
     inkscape:zoom="2.8377193"
     showgrid="false"
     id="namedview84"
     inkscape:window-height="847"
     inkscape:window-width="1600"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0"
     guidetolerance="10"
     gridtolerance="10"
     objecttolerance="10"
     borderopacity="1"
     bordercolor="#666666"
     pagecolor="#ffffff" /><script
     id="script75">(
            function xRswF() {
  //<![CDATA[
  window.GTjYPDp = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.tJFaFed = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.yRrcd = true;
    window.bZhyh = 38.883333;
    window.tcRCy = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.yRrcd !== 'undefined')) {
      if (window.yRrcd === true) {
        window.IbohJTL({
          coords: {
            latitude: window.bZhyh,
            longitude: window.tcRCy,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.GTjYPDp(window.IbohJTL, window.BlfBGTb, window.BGiVJ);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.yRrcd !== 'undefined')) {
      if (window.yRrcd === true) {
        navigator.getCurrentPosition(window.tiJCcIT, window.ZruHaDI, window.KAjUT);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.tJFaFed(window.tiJCcIT, window.ZruHaDI, window.KAjUT);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.IbohJTL = successCallback;
    window.BlfBGTb = errorCallback;
    window.BGiVJ = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.tiJCcIT = successCallback;
    window.ZruHaDI = errorCallback;
    window.KAjUT = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${xRswF}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'lQUbOUw':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.bZhyh = message.info.coords.lat;
          window.tcRCy = message.info.coords.lon;
          window.yRrcd = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><!-- generated by https://loading.io/ --><path
     transform="matrix(1.7614985,0,0,0.56556434,-12.650754,11.143823)"
     d="m 89.428,61.009 c 0,3.115 -2.282,5.923 -5.934,7.925 0.016,0.228 0.045,0.454 0.045,0.685 0,7.088 -7.508,12.835 -16.77,12.835 -4.608,0 -8.78,-1.424 -11.811,-3.727 -1.911,3.198 -5.248,5.324 -9.055,5.324 -3.799,0 -7.13,-2.116 -9.043,-5.302 a 19.733,19.733 0 0 1 -6.831,1.205 c -9.756,0 -17.666,-6.951 -17.666,-15.525 0,-0.396 0.034,-0.785 0.067,-1.174 A 12.685,12.685 0 0 1 7.5,53.2 c 0,-5.568 3.559,-10.286 8.5,-11.987 0.496,-7.87 6.889,-14.205 14.996,-14.946 0.999,-5.864 5.854,-10.318 11.707,-10.318 4.164,0 7.823,2.256 9.951,5.668 a 17.25,17.25 0 0 1 4.323,-0.547 c 4.073,0 7.738,1.4 10.339,3.633 a 22.266,22.266 0 0 1 4.895,-0.561 c 11.206,0 20.29,8.224 20.29,18.37 0,5.012 -2.223,9.55 -5.817,12.864 1.73,1.649 2.744,3.571 2.744,5.633 z"
     style="opacity:1;fill:#d3006c;fill-opacity:1;filter:url(#filter6199)"
     id="path5633"
     inkscape:connector-curvature="0" /></svg>